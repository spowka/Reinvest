{
  "swagger": "2.0",
  "info": {
    "title": "TradeCards API",
    "version": "v1"
  },
  "paths": {
    "/api/account/guest-login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Гостевой вход в систему",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Вход в систему",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для входа",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/confirmEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Подтверждение почты покупателя",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для подтверждения",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.ConfirmCustomerEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/account/forgot_password": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Запрос на восстановление пароля",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для восстановления",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.ForgotPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/account/reset_password": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Сброс пароля",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для сброса пароля",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/account/current_user": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Получение данных авторизованного пользователя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.CurrentUserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/{id}/get_user_name": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Получение ФИО пользователя по id для восстановления пароля",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор пользователя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/account/email/{email}/free": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Проверяет, свободен ли указанный имейл",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.IsEmailFreeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/loginVK": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Вход в систему через VK",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для входа",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginVKRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/loginFB": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Выполняет авторизацию через ФБ. Создает нового пользователя, если он еще не создан",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginFBRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/loginGoogle": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Выполняет авторизацию через гугл. Создает нового пользователя, если он еще не создан",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginGoogleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/account/loginOK": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Вход в систему через OK",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для входа",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginOKRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/blog-post/query": {
      "post": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Получение списка записей блога для админки",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Employee.GetBlogPostsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.BlogPost.BlogPostBriefModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/blog-post/{id}": {
      "get": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Получение данных записи блога для админки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.BlogPost.BlogPostModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Обновление данных записи блога",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "LogicalName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TitleTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DescriptionTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "KeywordsTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PostImage",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "ShortContent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Tags",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreateDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "IsPublished",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Удаление записи блога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/blog-post/{id}/publish": {
      "post": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Отметка записи блога как публикуемой на сайте",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/blog-post/{id}/unpublish": {
      "post": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Снятие отметки записи блога как публикуемой на сайте",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/blog-post": {
      "post": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Создание записи блога",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "Title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "LogicalName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TitleTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DescriptionTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "KeywordsTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PostImage",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "ShortContent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Tags",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreateDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "IsPublished",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/blog-post/blog-feed": {
      "post": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Получение ленты блога (для сайта)",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetBlogFeedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.BlogPostFeedChunk"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/blog-post/{name}/content": {
      "get": {
        "tags": [
          "BlogPost"
        ],
        "summary": "Получение записи блога (для сайта)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.BlogPost.BlogPostSiteViewModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/query": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Получение списка карточек для админки",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.Card.GetCardsTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.Card.GetCardsTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Card.AdminCardBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Получение карточки для редактирования в админке",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Card.GetCardFullModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cards"
        ],
        "summary": "Обновление карточки",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Status"
          },
          {
            "in": "formData",
            "name": "Updated",
            "description": "Время последнего изменения",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "Comment",
            "description": "Комментарий к смене статуса",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CatalogLevelId",
            "description": "Идентификатор уровня каталога, к которому привязана карточка",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Title",
            "description": "Наименование",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "description": "Описание для сайта",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TerminalDescription",
            "description": "Описание для терминала",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PrintCount",
            "description": "Тираж",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Unlimited",
            "description": "Неограниченный тираж",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "PriceModel"
          },
          {
            "in": "formData",
            "name": "Price",
            "description": "Цена",
            "type": "number",
            "format": "double"
          },
          {
            "in": "formData",
            "name": "PreviewImage",
            "description": "Превью для каталога",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "FrontImage",
            "description": "Лицевая сторона",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "BackImage",
            "description": "Обратная сторона",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPreviewImage",
            "description": "Превью для терминала",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalFrontImage",
            "description": "Лицевая сторона для терминала",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalBackImage",
            "description": "Обратная сторона для терминала",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintFrontImage",
            "description": "Исходник для печати на терминале. Лицевая сторона. Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintFrontHolo",
            "description": "Исходник для печати на терминале. Лицевая сторона. Голограмма",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintFrontLamination",
            "description": "Исходник для печати на терминале. Лицевая сторона. Ламинация",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintBackImage",
            "description": "Исходник для печати на терминале. Обратная сторона. Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintBackHolo",
            "description": "Исходник для печати на терминале. Обратная сторона. Голограмма",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintBackLamination",
            "description": "Исходник для печати на терминале. Обратная сторона. Ламинация",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintFilesMode"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Удаление карточки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Создание карточки",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "CatalogLevelId",
            "description": "Идентификатор уровня каталога, к которому привязана карточка",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Title",
            "description": "Наименование",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "description": "Описание для сайта",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TerminalDescription",
            "description": "Описание для терминала",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PrintCount",
            "description": "Тираж",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Unlimited",
            "description": "Неограниченный тираж",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "PriceModel"
          },
          {
            "in": "formData",
            "name": "Price",
            "description": "Цена",
            "type": "number",
            "format": "double"
          },
          {
            "in": "formData",
            "name": "PreviewImage",
            "description": "Превью для каталога",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "FrontImage",
            "description": "Лицевая сторона",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "BackImage",
            "description": "Обратная сторона",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPreviewImage",
            "description": "Превью для терминала",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalFrontImage",
            "description": "Лицевая сторона для терминала",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalBackImage",
            "description": "Обратная сторона для терминала",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintFrontImage",
            "description": "Исходник для печати на терминале. Лицевая сторона. Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintFrontHolo",
            "description": "Исходник для печати на терминале. Лицевая сторона. Голограмма",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintFrontLamination",
            "description": "Исходник для печати на терминале. Лицевая сторона. Ламинация",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintBackImage",
            "description": "Исходник для печати на терминале. Обратная сторона. Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintBackHolo",
            "description": "Исходник для печати на терминале. Обратная сторона. Голограмма",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalPrintBackLamination",
            "description": "Исходник для печати на терминале. Обратная сторона. Ламинация",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintFilesMode"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/{id}/archive": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Отправка карточки в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/{id}/restore": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Восстановление карточки из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/{id}/set_level/{catalogLevelId}": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Изменение привязки к уровню",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "catalogLevelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/{id}/move_after/{id2}": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Изменение позиции карточки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id2",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/preview/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Получение детальных данных карточки для превью в админке\r\nВыводятся даже неопубликованные карточки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetCardDetailResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cards/{id}/status-history": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Получение истории статусов",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.Card.CardStatusHistoryRecord"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/cart/add": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Добавить карточку в корзину",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Cart.AddRowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cart/update": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Обновить количество карточек в корзине",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Cart.UpdateRowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cart/delete": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Удалить карточку из корзины",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Cart.DeleteRowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Получение списка карточек",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Cart.Cart"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cart/move": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Перенести содержимое корзины из гостевого акаунта в покупательский",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Cart.MoveCartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/cart/start-checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Начинает обратный отсчет на оформление заказа",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/catalog": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Получение структуры каталога (полное дерево уровней)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogTreeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Добавление уровня каталога",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "ParentId",
            "description": "Идентификатор родительского уровня",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "description": "Наименование",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ShortDescription",
            "description": "Краткое описание",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ExtendedDescription",
            "description": "Расширенное описание",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Image",
            "description": "Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalThemeListImage",
            "description": "Терминал. Изображение для списка тематик",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalSeriesListImage",
            "description": "Терминал. Изображение для списка серий",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalBackgroundImage",
            "description": "Терминал. Фон",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalCollectionsListImage",
            "description": "Терминал. Изображение для списка коллекций",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalCardsListImage",
            "description": "Терминал. Изображение для списка карточек",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Получение данных уровня каталога (для редактирования)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogLevelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalog"
        ],
        "summary": "Обновление уровня каталога",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ParentId",
            "description": "Идентификатор родительского уровня",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "description": "Наименование",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ShortDescription",
            "description": "Краткое описание",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ExtendedDescription",
            "description": "Расширенное описание",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Image",
            "description": "Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalThemeListImage",
            "description": "Терминал. Изображение для списка тематик",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalSeriesListImage",
            "description": "Терминал. Изображение для списка серий",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalBackgroundImage",
            "description": "Терминал. Фон",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalCollectionsListImage",
            "description": "Терминал. Изображение для списка коллекций",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "TerminalCardsListImage",
            "description": "Терминал. Изображение для списка карточек",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "Удаление уровня каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/move": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Перемещение уровня каталога",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Параметры запроса перемещения уровня каталога",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Catalog.MoveCatalogLevelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/publish": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Получение структуры каталога (полное дерево уровней для настройки публикации)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogPublishTreeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/publish": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Отметка текущего уровня каталога как публикуемого на сайте",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/unpublish": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Снятие отметки текущего уровня каталога как публикуемого на сайте",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/publish/top": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Отметка текущего уровня каталога как публикуемого в топе каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/unpublish/top": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Снятие отметки текущего уровня каталога как публикуемого в топе каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/publish/top/{topLevel}": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Отметка текущего уровня каталога как публикуемого в топе уровня каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "topLevel",
            "description": "Номер уровня топа каталога (1-тема, 2-серия)",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/catalog/{id}/unpublish/top/{topLevel}": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Снятие отметки текущего уровня каталога как публикуемого в топе уровня каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор уровня каталога",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "topLevel",
            "description": "Номер уровня топа каталога (1-тема, 2-серия)",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/content/promo-banners": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Получение списка промо баннеров для сайта",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.PromoBanner.PromoBannerSiteModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/customer/query": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Получение страницы списка покупателей",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные запроса",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Получение данных покупателя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор покупателя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Обновление данных покупателя",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор покупателя",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FirstName",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "LastName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Password",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PhoneNumber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryRegion",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryCity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryPostIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryStreet",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryHouse",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryBuilding",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryApartment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Удаление данных покупателя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор пользователя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Регистрация покупателя",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для регистрации",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.RegisterCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/customer/{id}/archive": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Отправка данных покупателя в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор покупателя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/customer/{id}/restore": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Восстановление данных покупателя из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор покупателя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/customer/{id}/sendregdata": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Отправить рег. данные покупателя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор покупателя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/customer/{id}/active-orders": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Получение заказов \"в работе\" покупателя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomerActiveOrdersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/customer/{id}/finished-orders": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Получение завершенных заказов покупателя",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomerFinishedOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomerFinishedOrdersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/email-template/{id}": {
      "get": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Получение шаблона письма",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.GetEmailTemplateResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Обновление шаблона письма",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.UpdateEmailTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.GetEmailTemplateResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/employee/query": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Получение страницы списка сотрудников",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные запроса",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Получение данных сотрудника",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Обновление данных сотрудника",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Обновленные данные сотрудника",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Employee.UpdateEmployeeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Удаление данных сотрудника",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор пользователя",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/employee": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Регистрация сотрудника",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные для регистрации",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Account.RegisterEmployeeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/employee/{id}/archive": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Отправка данных сотрудника в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/employee/{id}/restore": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Восстановление данных сотрудника из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/employee/{id}/sendregdata": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Отправить рег. данные сотрудника",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/geo/yandex-api-key": {
      "get": {
        "tags": [
          "Geo"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "address",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/geo/search/{address}": {
      "get": {
        "tags": [
          "Geo"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Geo.SearchResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/geo/office-address": {
      "get": {
        "tags": [
          "Geo"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Geo.SearchResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/home/menu": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Получение структуры каталога (полное дерево уровней для меню)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetMenuResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/home/top": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Получение топовых уровней каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogTopLevelsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/home/{id}": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Получение подробных данных уровня каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogLevelDetailResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/home/{id}/children/{level}": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Получение дочерних уровней для уровня каталога",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "level",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogChildrenResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/home/card/{id}": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Получение детальных данных карточки (для сайта)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Home.GetCardDetailResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/home/{id}/cards": {
      "post": {
        "tags": [
          "Home"
        ],
        "summary": "Получение списка карточек для тематики (для сайта)",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.Card.GetThemeCardsFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.Card.GetThemeCardsSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Card.SiteThemeCardModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/legal-entities/query": {
      "post": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Получение страницы списка юридических лиц",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.LegalEntities.GetLegalEntitiesTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.LegalEntities.GetLegalEntitiesTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.LegalEntities.GetLegalEntitiesBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/legal-entities/{id}/basic-info": {
      "get": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Получение базового описания юр. лица",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор юр.лица",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.LegalEntities.Tabs.Response.LegalEntityBasicInfoResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/legal-entities": {
      "post": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Создание юр. лица",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.LegalEntities.Tabs.Request.CreateLegalEntityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/legal-entities/{id}": {
      "put": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Обновление данных юр. лица",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор юр. лица",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.LegalEntities.Tabs.Request.UpdateLegalEntityBasicInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/legal-entities/{id}/archive": {
      "post": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Отправка юр. лица в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор юр. лица",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/legal-entities/{id}/restore": {
      "post": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Восстановление юр. лица",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор юр. лица",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/legal-entities/{id}/sendregdata": {
      "post": {
        "tags": [
          "LegalEntities"
        ],
        "summary": "Отправить рег. данные юр лица",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/message": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получение дерева групп сообщений",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.GetMessageGroupTreeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/message/{id}/group": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получение группы сообщений",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.GetMessageGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/message/{id}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Получение текста сообщения",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Message"
        ],
        "summary": "Обновление группы сообщений",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.UpdateMessageGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Message.GetMessageGroupResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/place": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Разместить заказ\r\nЗдесь мы регистрируем инвойс в системе RBK и передаем в мета-данных все содержимое заказа\r\nЗаказ будет создан только тогда, когда инвойс будет оплачен",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.PlaceOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.PlaceOrderResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/query": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Получение списка заказов",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.Order.GetOrdersTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.Order.GetOrdersTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Order.OrderBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/{id}/data": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Получение сведений о заказе для быстрого просмотра из списка заказов",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.OrderDataModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/start-printing": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Подготовка к печати одного или нескольких заказов",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.StartPrintPreparingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/printing-state": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Получение состояния печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Data.Entities.PrintSessionStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/order/pickpoints": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Получение списка пунктов самовывоза для страницы оформления заказа",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Order.PickupPointOrderModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/{id}/history": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Получение истории статусов заказа. \r\nЕсли запрашивает сотрудник, то выводится полная информация по любому заказу.\r\nЕсли запрашивает покупатель, то выводится сокращенная инфа и только по своим заказам.",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/{id}/details": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Получение детальных сведений о заказе",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.GetOrderDetailsForEmployeeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/{id}": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Обновление заказа через админку",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DeliveryRegion",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryCity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryPostIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryStreet",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryHouse",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryBuilding",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryApartment",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Comment",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "NewStatus"
          },
          {
            "in": "formData",
            "name": "NewStatusComment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/order/payment-status": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Разместить заказ\r\nЗдесь мы регистрируем инвойс в системе RBK и передаем в мета-данных все содержимое заказа\r\nЗаказ будет создан только тогда, когда инвойс будет оплачен",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.GetPaymentStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Order.GetPaymentStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/pickup-point/query": {
      "post": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Получение списка ПС",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.PickupPoint.GetPickupPointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.PickupPoint.PickupPointBriefModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point/{id}": {
      "get": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Получение данных ПС",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.PickupPoint.PickupPointModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Обновление данных собственника ПС",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "Latitude",
            "description": "Широта",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "Longitude",
            "description": "Долгота",
            "type": "number",
            "format": "double"
          },
          {
            "in": "formData",
            "name": "OwnerId",
            "description": "Идентификатор собственника ПС",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "description": "Наименование",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Address",
            "description": "Адрес",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ManualCoordinates",
            "description": "Если true, то координаты установлены вручную (не по адресу)",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "Phones",
            "description": "Телефоны",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Schedule",
            "description": "Время работы",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Comment",
            "description": "Дополнительно",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "IsAvailable",
            "description": "Доступность для заказа",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "IsOffice",
            "description": "Является офисом",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "EmployeeEmail",
            "description": "Привязанный сотрудник. Email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "EmployeePassword",
            "description": "Привязанный сотрудник. Пароль",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point": {
      "post": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Создание ПС",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Latitude",
            "description": "Широта",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "Longitude",
            "description": "Долгота",
            "type": "number",
            "format": "double"
          },
          {
            "in": "formData",
            "name": "OwnerId",
            "description": "Идентификатор собственника ПС",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "description": "Наименование",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Address",
            "description": "Адрес",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ManualCoordinates",
            "description": "Если true, то координаты установлены вручную (не по адресу)",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "Phones",
            "description": "Телефоны",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Schedule",
            "description": "Время работы",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Comment",
            "description": "Дополнительно",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "IsAvailable",
            "description": "Доступность для заказа",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "IsOffice",
            "description": "Является офисом",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "EmployeeEmail",
            "description": "Привязанный сотрудник. Email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "EmployeePassword",
            "description": "Привязанный сотрудник. Пароль",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/pickup-point/{id}/archive": {
      "post": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Отправка ПС в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point/{id}/restore": {
      "post": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Восстановление ПС из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point/{id}/sendregdata": {
      "post": {
        "tags": [
          "PickupPoint"
        ],
        "summary": "Отправить рег. данные ПС",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point-owner/query": {
      "post": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Получение списка ПС",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.PickupPoint.GetPickupPointsOwnersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.PickupPoint.PickupPointsOwnerBriefModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point-owner/{id}": {
      "get": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Получение данных собственника ПС",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.PickupPoint.PickupPointsOwnerModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Обновление данных собственника ПС",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "description": "Наименование (\"Собственник пунктов\")",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactFirstName",
            "description": "Имя контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactLastName",
            "description": "Фамилия контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactPost",
            "description": "Должность контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactEmail",
            "description": "Email контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactPhone",
            "description": "Телефон контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ActiveMapIcon",
            "description": "Иконка для карты неактивная",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "InactiveMapIcon",
            "description": "Иконка для карты активная",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point-owner": {
      "post": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Создание собственника ПС",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "Name",
            "description": "Наименование (\"Собственник пунктов\")",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactFirstName",
            "description": "Имя контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactLastName",
            "description": "Фамилия контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactPost",
            "description": "Должность контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactEmail",
            "description": "Email контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContactPhone",
            "description": "Телефон контактного лица",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ActiveMapIcon",
            "description": "Иконка для карты неактивная",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "InactiveMapIcon",
            "description": "Иконка для карты активная",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/pickup-point-owner/{id}/archive": {
      "post": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Отправка собственника ПС в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point-owner/{id}/restore": {
      "post": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Восстановление собственника ПС из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника ПС",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/pickup-point-owner/reorder": {
      "post": {
        "tags": [
          "PickupPointsOwner"
        ],
        "summary": "Изменение порядка вывода собственников ПС",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Идентификаторы записей в необходимом порядке",
            "schema": {
              "description": "Идентификаторы записей в необходимом порядке",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/ppm-order/query": {
      "post": {
        "tags": [
          "PPMOrder"
        ],
        "summary": "Получение списка заказов",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.PPMOrder.GetOrdersTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.PPMOrder.GetOrdersTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.PPMOrder.OrderBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ppm-order/set-awaiting-delivery": {
      "post": {
        "tags": [
          "PPMOrder"
        ],
        "summary": "Перевод одного или нескольких заказов в статус \"Ожидает выдачи\"",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.PPMOrder.SetAwaitingDeliveryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ppm-order/{id}/details": {
      "get": {
        "tags": [
          "PPMOrder"
        ],
        "summary": "Получение детальных сведений о заказе",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.PPMOrder.GetOrderDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/ppm-order/{id}": {
      "put": {
        "tags": [
          "PPMOrder"
        ],
        "summary": "Обновление заказа через админку",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Comment",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "NewStatus"
          },
          {
            "in": "formData",
            "name": "NewStatusComment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/tasks": {
      "get": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Получение списка заданий на печать",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.PrintAgent.PrintTask"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/ping": {
      "post": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Получение от принт-агента сигнала о том, что он работает",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/printers": {
      "post": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Получение списка принтеров от принт-агента",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.PrintAgent.PrinterInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/tasks/{id}/error": {
      "post": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Поставить статус \"Ошибка\"",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/tasks/{id}/printing": {
      "post": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Поставить статус \"В печати\"",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/tasks/{id}/success": {
      "post": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Поставить статус \"Успех\"",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/tasks/{id}/images": {
      "get": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Получение архива изображений, необходимых для печати одного задания",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/print-agent/tasks/{id}/images2": {
      "get": {
        "tags": [
          "PrintAgent"
        ],
        "summary": "Получение архива изображений, необходимых для печати одного задания",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/printer": {
      "get": {
        "tags": [
          "Printer"
        ],
        "summary": "Получение списка принтеров",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.Printers.Printer"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/printer/{id}": {
      "put": {
        "tags": [
          "Printer"
        ],
        "summary": "Обновление данных принтера",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "description": "Имя принтера",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "InProfile",
            "description": "Входной профиль",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "OutProfile",
            "description": "Выходной профиль",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/printer/{printerId}/print": {
      "post": {
        "tags": [
          "Printer"
        ],
        "summary": "Запуск тестовой печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "printerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/printer/{printerId}/test-print": {
      "get": {
        "tags": [
          "Printer"
        ],
        "summary": "Получение статуса тестовой печати для принтера",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "printerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printers.TestPrintStateModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/printer/{printerId}/test-print/{taskId}": {
      "get": {
        "tags": [
          "Printer"
        ],
        "summary": "Получение статуса тестовой печати для принтера",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "printerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printers.TestPrintStateModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/printing/preparation": {
      "get": {
        "tags": [
          "Printing"
        ],
        "summary": "Получение страницы подготовки к печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.PrintPreparationModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/process/printers": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Отредактировать список выбранных принтеров \r\n(честно я не знаю зачем вообще эти галочки сделали, если их можно редактировать на любой стадии)",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.SelectPrintersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/process": {
      "get": {
        "tags": [
          "Printing"
        ],
        "summary": "Получение страницы печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.PrintProcessModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/cancel-session": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Отмена сессии печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/print": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Начать печать",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.StartPrintingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/printer/{printerId}/stop": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Остановить принтер",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "printerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/printer/stop-all": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Остановить все принтеры",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/card/{cardId}/reject": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Забраковать карточку",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.ChangeCardStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/card/{cardId}/cancel": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Отменить карточку",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.ChangeCardStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/card/{cardId}/reprint": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Повторная печать карточки",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.ReprintCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/finish": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Завершение сессии печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/printing/force-shutdown": {
      "post": {
        "tags": [
          "Printing"
        ],
        "summary": "Принудительное завершение сессии печати",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Printing.ForceShutdownResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/profile/info": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Получение профиля авторизованного покупателя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Profile.GetProfileDataResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Обновление профиля авторизованного покупателя",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "FirstName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "LastName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PhoneNumber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryRegion",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryCity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryPostIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryStreet",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryHouse",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryBuilding",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeliveryApartment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Profile.GetProfileDataResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/profile/active-orders": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Получение заказов \"в работе\" авторизованного покупателя",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Profile.GetActiveOrdersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/profile/order/{id}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Получение детальных сведений о заказе",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Profile.GetOrderDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/profile/finished-orders": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Получение завершенных заказов авторизованного покупателя",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Profile.GetProfileFinishedOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Profile.GetFinishedOrdersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/promo-banner": {
      "get": {
        "tags": [
          "PromoBanner"
        ],
        "summary": "Получение списка промо баннеров для админки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.PromoBanner.PromoBannerModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromoBanner"
        ],
        "summary": "Обновление баннеров",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "items",
            "type": "array",
            "items": {
              "$ref": "#/definitions/TradeCards.Models.PromoBanner.PromoBannerUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/settings/{name}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Settings.ParamResponse"
            }
          }
        }
      }
    },
    "/api/settings/service": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Получение служебных настроек",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Settings.ServiceSettingsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Обновление служебных настроек",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Settings.ServiceSettingsResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/settings/test-print": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Получение служебных настроек",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Settings.TestPrintSettingsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Обновление служебных настроек",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "PrintFrontImage",
            "description": "Исходник для печати на терминале. Лицевая сторона. Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintFrontHolo",
            "description": "Исходник для печати на терминале. Лицевая сторона. Голограмма",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintFrontLamination",
            "description": "Исходник для печати на терминале. Лицевая сторона. Ламинация",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintBackImage",
            "description": "Исходник для печати на терминале. Обратная сторона. Изображение",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintBackHolo",
            "description": "Исходник для печати на терминале. Обратная сторона. Голограмма",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintBackLamination",
            "description": "Исходник для печати на терминале. Обратная сторона. Ламинация",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "PrintFilesMode"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/settings/social": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Возвращает настройки (открытые ключи) для авторизации через соц. сети",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Settings.SocialSettingsResponse"
            }
          }
        }
      }
    },
    "/api/site-search/search": {
      "post": {
        "tags": [
          "SiteSearch"
        ],
        "summary": "Поиск по сайту",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.SiteSearch.SearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.SiteSearch.SearchResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/site-search/suggests/{searchString}": {
      "get": {
        "tags": [
          "SiteSearch"
        ],
        "summary": "Поиск по сайту",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "searchString",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.SiteSearch.SuggestsResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/terminal/query": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение страницы списка терминалов",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal/forAttach": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение страницы списка терминалов для окна присоединения",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsForAttachRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsForAttachRow"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal/{id}": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение данных терминала",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Terminal"
        ],
        "summary": "Обновление данных терминала",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "InventoryNumber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConnectId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TerminalOwnerId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CartCleanupWarningDelay",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CartCleanupCountdown",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "PublishCatalogLevels",
            "description": "Список идентификаторов уровней каталога, опубликованных для данного терминала",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "CustomCatalogLevelImages",
            "description": "Список идентификаторов уровней каталога, для которых переопределены фоновые изображения в данном терминале",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "PromoVideo",
            "description": "Промо-ролик",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Terminal"
        ],
        "summary": "Удаление терминала",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/terminal": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "Создание терминала",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "InventoryNumber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConnectId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TerminalOwnerId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CartCleanupWarningDelay",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CartCleanupCountdown",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "PublishCatalogLevels",
            "description": "Список идентификаторов уровней каталога, опубликованных для данного терминала",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "CustomCatalogLevelImages",
            "description": "Список идентификаторов уровней каталога, для которых переопределены фоновые изображения в данном терминале",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "PromoVideo",
            "description": "Промо-ролик",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/terminal/{id}/archive": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "Отправка терминала в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal/{id}/restore": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "Восстановление терминала из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal/cards": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение списка карточек",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Terminal.GetCardsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Terminal.GetCardVariableParamsModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/terminal/full/{connectId}": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение полного набора данных терминала",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectId",
            "description": "СonnectId терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal/card/{id}/images": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение архива изображений, необходимых для печати карточки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/terminal/card/{id}/images2": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "Получение архива изображений, необходимых для печати карточки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/terminal-owner/query": {
      "post": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Получение страницы списка собственников терминалов",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal-owner/{id}": {
      "get": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Получение данных терминала",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Обновление данных собственника терминала",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор сотрудника",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TerminalOwner.UpdateTerminalOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Удаление собственника терминала",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/terminal-owner": {
      "post": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Создание собственника терминала",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Данные",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TerminalOwner.UpdateTerminalOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.ControllerError"
              }
            }
          }
        }
      }
    },
    "/api/terminal-owner/{id}/archive": {
      "post": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Отправка собственника терминала в архив",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal-owner/{id}/restore": {
      "post": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Восстановление собственника терминала из архива",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/terminal-owner/{id}/sendregdata": {
      "post": {
        "tags": [
          "TerminalOwner"
        ],
        "summary": "Отправить рег. данные собственника терминала",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Идентификатор собственника терминала",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ItemIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/test/test": {
      "get": {
        "tags": [
          "Test"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/test/test_for_anyone": {
      "get": {
        "tags": [
          "Test"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/test/test_for_admin": {
      "get": {
        "tags": [
          "Test"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/test/test_for_customer": {
      "get": {
        "tags": [
          "Test"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/text-page": {
      "get": {
        "tags": [
          "TextPages"
        ],
        "summary": "Получение списка текстовых страниц для админки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeCards.Models.TextPage.TextPageBriefModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TextPages"
        ],
        "summary": "Создание текстовой страницы",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "IsPublished",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "LogicalName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TitleTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DescriptionTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "KeywordsTag",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/text-page/{id}": {
      "get": {
        "tags": [
          "TextPages"
        ],
        "summary": "Получение данных текстовой страницы для админки",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TextPage.TextPageModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TextPages"
        ],
        "summary": "Обновление данных текстовой страницы",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "IsPublished",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "LogicalName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TitleTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DescriptionTag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "KeywordsTag",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TextPages"
        ],
        "summary": "Удаление текстовой страницы",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    },
    "/api/text-page/{id}/publish": {
      "post": {
        "tags": [
          "TextPages"
        ],
        "summary": "Отметка текстовой страницы как публикуемой на сайте",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/text-page/{id}/unpublish": {
      "post": {
        "tags": [
          "TextPages"
        ],
        "summary": "Снятие отметки текстовой страницы как публикуемой на сайте",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/text-page/reorder": {
      "post": {
        "tags": [
          "TextPages"
        ],
        "summary": "Изменение порядка вывода текстовых страниц",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Идентификаторы записей в необходимом порядке",
            "schema": {
              "description": "Идентификаторы записей в необходимом порядке",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.ControllerError"
            }
          }
        }
      }
    },
    "/api/text-page/{name}/content": {
      "get": {
        "tags": [
          "TextPages"
        ],
        "summary": "Получение текстовой страницы (для сайта)",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradeCards.Models.TextPage.TextPageViewModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TradeCards.Models.Employee.EmployeeRoleTarget": {
      "format": "int32",
      "description": "Объект доступа сотрудника",
      "enum": [
        0
      ],
      "type": "integer"
    },
    "TradeCards.Models.Employee.EmployeeRoleAccess": {
      "format": "int32",
      "description": "Уровень доступа сотрудника",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "TradeCards.Models.Account.CurrentUserResponse+UserAccessRow": {
      "type": "object",
      "properties": {
        "Target": {
          "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleTarget"
        },
        "Access": {
          "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleAccess"
        }
      }
    },
    "TradeCards.Models.Account.UserType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "TradeCards.Models.Account.LoginResponse": {
      "description": "Ответ на запрос входа в систему",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "FullName": {
          "description": "ФИО",
          "type": "string"
        },
        "Access": {
          "description": "Роли пользователя",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Account.CurrentUserResponse+UserAccessRow"
          }
        },
        "UserType": {
          "$ref": "#/definitions/TradeCards.Models.Account.UserType"
        },
        "Token": {
          "description": "Токен авторизации",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.ControllerError": {
      "description": "Ошибка",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Код",
          "type": "string"
        },
        "Description": {
          "description": "Описание",
          "type": "string"
        }
      }
    },
    "Microsoft.AspNetCore.Mvc.ProblemDetails": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "type": "integer"
        },
        "Detail": {
          "type": "string"
        },
        "Instance": {
          "type": "string"
        },
        "Extensions": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        }
      }
    },
    "TradeCards.Models.Account.LoginRequest": {
      "description": "Параметры запроса на вход в систему",
      "required": [
        "Email",
        "Password"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "format": "email",
          "description": "Email",
          "type": "string"
        },
        "Password": {
          "format": "password",
          "description": "Пароль",
          "type": "string"
        },
        "IsAdmin": {
          "description": "Если true, то пользователь пытается залогиниться в админку, в противном случае - как покупатель",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Account.ConfirmCustomerEmailRequest": {
      "description": "Параметры запроса на подтверждение почты покупателя",
      "required": [
        "Code",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "ИД покупателя",
          "type": "string"
        },
        "Code": {
          "description": "Код подтверждения",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.ForgotPasswordRequest": {
      "description": "Параметры запроса на восстановление пароля",
      "required": [
        "Email"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "format": "email",
          "description": "Email",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.ResetPasswordRequest": {
      "description": "Параметры запроса на сброс пароля пользователя",
      "required": [
        "Password",
        "UserId"
      ],
      "type": "object",
      "properties": {
        "UserId": {
          "description": "Идентификатор пользователя",
          "type": "string"
        },
        "Password": {
          "format": "password",
          "description": "Пароль",
          "type": "string"
        },
        "Code": {
          "description": "Токен",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.CurrentUserResponse": {
      "description": "Ответ на запрос данных текущего пользователя",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "FullName": {
          "description": "ФИО",
          "type": "string"
        },
        "Access": {
          "description": "Роли пользователя",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Account.CurrentUserResponse+UserAccessRow"
          }
        },
        "UserType": {
          "$ref": "#/definitions/TradeCards.Models.Account.UserType"
        }
      }
    },
    "TradeCards.Models.Account.IsEmailFreeResponse": {
      "type": "object",
      "properties": {
        "HasUser": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Account.LoginVKRequest": {
      "description": "Параметры запроса на вход в систему через VK",
      "type": "object",
      "properties": {
        "ReturnUrl": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.LoginFBRequest": {
      "description": "Параметры запроса на вход в систему через VK",
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "data_access_expiration_time": {
          "format": "int32",
          "type": "integer"
        },
        "expiresIn": {
          "format": "int32",
          "type": "integer"
        },
        "signedRequest": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.LoginGoogleRequest": {
      "description": "Параметры запроса на вход в систему через Google",
      "type": "object",
      "properties": {
        "IdToken": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.LoginOKRequest": {
      "description": "Параметры запроса на вход в систему через OK",
      "type": "object",
      "properties": {
        "AccessToken": {
          "type": "string"
        },
        "SessionSecretKey": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.DateFilter": {
      "description": "Фильтр даты",
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "description": "Начало",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "description": "Конец",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Employee.GetBlogPostsTableFilter": {
      "type": "object",
      "properties": {
        "CreationDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "Title": {
          "description": "Имя",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Employee.GetBlogPostsTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка сотрудников",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "TradeCards.Models.Employee.GetBlogPostsTableSort": {
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Employee.GetBlogPostsTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Employee.GetBlogPostsRequest": {
      "description": "Параметры запроса на получение списка записей блога",
      "type": "object",
      "properties": {
        "PageSize": {
          "format": "int32",
          "description": "Размер страницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс страницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Employee.GetBlogPostsTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Employee.GetBlogPostsTableSort"
        }
      }
    },
    "TradeCards.Models.BlogPost.BlogPostBriefModel": {
      "description": "Админка. Модель для списка текстовых страниц",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "IsPublished": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.BlogPost.BlogPostModel": {
      "description": "Админка. Модель для списка текстовых страниц",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "LogicalName": {
          "type": "string"
        },
        "TitleTag": {
          "type": "string"
        },
        "DescriptionTag": {
          "type": "string"
        },
        "KeywordsTag": {
          "type": "string"
        },
        "PostImage": {
          "type": "string"
        },
        "ShortContent": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "Tags": {
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsPublished": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Home.GetBlogFeedRequest": {
      "type": "object",
      "properties": {
        "Year": {
          "format": "int32",
          "type": "integer"
        },
        "Skip": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Home.BlogPostSiteBriefModel": {
      "type": "object",
      "properties": {
        "Image": {
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        },
        "LogicalName": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Home.BlogPostFeedChunk": {
      "type": "object",
      "properties": {
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.BlogPostSiteBriefModel"
          }
        },
        "NextPosition": {
          "format": "int32",
          "type": "integer"
        },
        "NextYear": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "TradeCards.Models.BlogPost.BlogPostSiteViewModel": {
      "type": "object",
      "properties": {
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "Tags": {
          "type": "string"
        },
        "TitleTag": {
          "type": "string"
        },
        "DescriptionTag": {
          "type": "string"
        },
        "KeywordsTag": {
          "type": "string"
        }
      }
    },
    "TradeCards.Data.Entities.CardStatus": {
      "format": "int32",
      "description": "Статус карточки",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "TradeCards.Models.Card.GetCardsTableFilter": {
      "description": "Фильтр таблицы списка карточек",
      "type": "object",
      "properties": {
        "CatalogLevelId": {
          "description": "Идентификатор уровня каталога",
          "type": "string"
        },
        "Title": {
          "description": "Название карточки",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardStatus"
        }
      }
    },
    "TradeCards.Models.Card.GetCardsTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка карточек",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "TradeCards.Models.Card.GetCardsTableSort": {
      "description": "Параметры сортировки таблицы списка карточек",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Card.GetCardsTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.Card.GetCardsTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.Card.GetCardsTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Параметры запроса на получение списка карточек",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Card.GetCardsTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Card.GetCardsTableSort"
        }
      }
    },
    "TradeCards.Data.Entities.PriceModelType": {
      "format": "int32",
      "description": "Модель формирования цены",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "TradeCards.Data.Entities.CardPrintFilesMode": {
      "format": "int32",
      "description": "Режим печати карты на терминале",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "TradeCards.Models.Card.AdminCardBriefModel": {
      "description": "Модель получения карточки для просмотра списка карточек в админке",
      "type": "object",
      "properties": {
        "CatalogLevelId": {
          "description": "Идентификатор уровня каталога, к которому привязана карточка",
          "type": "string"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "Description": {
          "description": "Описание для сайта",
          "type": "string"
        },
        "TerminalDescription": {
          "description": "Описание для терминала",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Unlimited": {
          "description": "Неограниченный тираж",
          "type": "boolean"
        },
        "PriceModel": {
          "$ref": "#/definitions/TradeCards.Data.Entities.PriceModelType"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        },
        "PreviewImage": {
          "format": "binary",
          "description": "Превью для каталога",
          "type": "string"
        },
        "FrontImage": {
          "format": "binary",
          "description": "Лицевая сторона",
          "type": "string"
        },
        "BackImage": {
          "format": "binary",
          "description": "Обратная сторона",
          "type": "string"
        },
        "TerminalPreviewImage": {
          "format": "binary",
          "description": "Превью для терминала",
          "type": "string"
        },
        "TerminalFrontImage": {
          "format": "binary",
          "description": "Лицевая сторона для терминала",
          "type": "string"
        },
        "TerminalBackImage": {
          "format": "binary",
          "description": "Обратная сторона для терминала",
          "type": "string"
        },
        "TerminalPrintFrontImage": {
          "format": "binary",
          "description": "Исходник для печати на терминале. Лицевая сторона. Изображение",
          "type": "string"
        },
        "TerminalPrintFrontHolo": {
          "format": "binary",
          "description": "Исходник для печати на терминале. Лицевая сторона. Голограмма",
          "type": "string"
        },
        "TerminalPrintFrontLamination": {
          "format": "binary",
          "description": "Исходник для печати на терминале. Лицевая сторона. Ламинация",
          "type": "string"
        },
        "TerminalPrintBackImage": {
          "format": "binary",
          "description": "Исходник для печати на терминале. Обратная сторона. Изображение",
          "type": "string"
        },
        "TerminalPrintBackHolo": {
          "format": "binary",
          "description": "Исходник для печати на терминале. Обратная сторона. Голограмма",
          "type": "string"
        },
        "TerminalPrintBackLamination": {
          "format": "binary",
          "description": "Исходник для печати на терминале. Обратная сторона. Ламинация",
          "type": "string"
        },
        "PrintFilesMode": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardPrintFilesMode"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardStatus"
        },
        "Updated": {
          "format": "date-time",
          "description": "Время последнего изменения",
          "type": "string"
        },
        "Comment": {
          "description": "Комментарий к смене статуса",
          "type": "string"
        },
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "IsActive": {
          "description": "Признак действующая/архивная",
          "type": "boolean"
        },
        "SoldCount": {
          "format": "int32",
          "description": "Продано",
          "type": "integer"
        },
        "CanEdit": {
          "description": "Можно ли редактировать поля или статус карточки",
          "type": "boolean"
        },
        "CanArchive": {
          "description": "Можно ли перенести карточку в архив",
          "type": "boolean"
        },
        "CanRestore": {
          "description": "Можно ли восстановить карточку из архивных",
          "type": "boolean"
        },
        "CanDelete": {
          "description": "Можно ли удалить карточку",
          "type": "boolean"
        },
        "CanMoveOrReorder": {
          "description": "Можно ли переносить карточку на другой уровень или изменять ее порядок отображения",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Card.AdminCardBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Card.AdminCardBriefModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Card.GetCardFullModel": {
      "description": "Модель получения карточки для редактирования в админке",
      "type": "object",
      "properties": {
        "CatalogLevelId": {
          "description": "Идентификатор уровня каталога, к которому привязана карточка",
          "type": "string"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "Description": {
          "description": "Описание для сайта",
          "type": "string"
        },
        "TerminalDescription": {
          "description": "Описание для терминала",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Unlimited": {
          "description": "Неограниченный тираж",
          "type": "boolean"
        },
        "PriceModel": {
          "$ref": "#/definitions/TradeCards.Data.Entities.PriceModelType"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        },
        "PreviewImage": {
          "description": "Превью",
          "type": "string"
        },
        "FrontImage": {
          "description": "Лицевая сторона",
          "type": "string"
        },
        "BackImage": {
          "description": "Обратная сторона",
          "type": "string"
        },
        "TerminalPreviewImage": {
          "description": "Превью для терминала",
          "type": "string"
        },
        "TerminalFrontImage": {
          "description": "Лицевая сторона для терминала",
          "type": "string"
        },
        "TerminalBackImage": {
          "description": "Обратная сторона для терминала",
          "type": "string"
        },
        "TerminalPrintFrontImage": {
          "description": "Исходник для печати на терминале. Лицевая сторона. Изображение",
          "type": "string"
        },
        "TerminalPrintFrontHolo": {
          "description": "Исходник для печати на терминале. Лицевая сторона. Голограмма",
          "type": "string"
        },
        "TerminalPrintFrontLamination": {
          "description": "Исходник для печати на терминале. Лицевая сторона. Ламинация",
          "type": "string"
        },
        "TerminalPrintBackImage": {
          "description": "Исходник для печати на терминале. Обратная сторона. Изображение",
          "type": "string"
        },
        "TerminalPrintBackHolo": {
          "description": "Исходник для печати на терминале. Обратная сторона. Голограмма",
          "type": "string"
        },
        "TerminalPrintBackLamination": {
          "description": "Исходник для печати на терминале. Обратная сторона. Ламинация",
          "type": "string"
        },
        "PrintFilesMode": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardPrintFilesMode"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardStatus"
        },
        "Comment": {
          "description": "Комментарий к смене статуса",
          "type": "string"
        },
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "IsActive": {
          "description": "Признак действующая/архивная",
          "type": "boolean"
        },
        "SoldCount": {
          "format": "int32",
          "description": "Продано",
          "type": "integer"
        },
        "Created": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "Index": {
          "format": "int32",
          "description": "Индекс карточки в списке карточек уровня каталога",
          "type": "integer"
        },
        "UpdatedByUserId": {
          "description": "Последнее изменение",
          "type": "string"
        },
        "UpdatedBy": {
          "description": "Последнее изменение",
          "type": "string"
        },
        "Updated": {
          "format": "date-time",
          "description": "Время последнего изменения",
          "type": "string"
        },
        "CanEdit": {
          "description": "Можно ли редактировать поля карточки (за исключением статуса - возможности по его изменению определяются согласно полю AvailableStatuses)",
          "type": "boolean"
        },
        "AvailableStatuses": {
          "description": "Доступные статусы карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Data.Entities.CardStatus"
          }
        }
      }
    },
    "TradeCards.Models.ItemIdResponse": {
      "description": "Ответ на запрос операции над элементом",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Home.GetCardDetailResponse": {
      "description": "Ответ на запрос детальных данных карточки",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "Description": {
          "description": "Описание для сайта",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Unlimited": {
          "description": "Неограниченный тираж",
          "type": "boolean"
        },
        "PrintCountLeft": {
          "format": "int32",
          "description": "Остаток тиража",
          "type": "integer"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        },
        "FrontImage": {
          "description": "Лицевая сторона",
          "type": "string"
        },
        "BackImage": {
          "description": "Обратная сторона",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Card.CardStatusHistoryRecord": {
      "description": "",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CardTitle": {
          "description": "Карточка",
          "type": "string"
        },
        "UserName": {
          "description": "Сотрудник",
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "description": "Дата",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardStatus"
        },
        "Comment": {
          "description": "Коммент",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Cart.AddRowRequest": {
      "type": "object",
      "properties": {
        "CardId": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "CaptchaResponse": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Cart.UpdateRowRequest": {
      "type": "object",
      "properties": {
        "CardId": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "CaptchaResponse": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Cart.DeleteRowRequest": {
      "type": "object",
      "properties": {
        "CardId": {
          "type": "string"
        },
        "CaptchaResponse": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Cart.DetailRow": {
      "type": "object",
      "properties": {
        "Price": {
          "format": "double",
          "description": "Цена за штуку",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "description": "Количество",
          "type": "integer"
        },
        "DetailPrice": {
          "format": "double",
          "description": "Общая цена",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "TradeCards.Models.Cart.CartRow": {
      "description": "Строка в корзине пользователя",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор (карточки)",
          "type": "string"
        },
        "PreviewImage": {
          "description": "Превью",
          "type": "string"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "Path": {
          "description": "Путь ( Тематика / Серия / Комплект )",
          "type": "string"
        },
        "DetailRows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Cart.DetailRow"
          }
        },
        "RowQuantity": {
          "format": "int32",
          "description": "Общее количество",
          "type": "integer",
          "readOnly": true
        },
        "RowPrice": {
          "format": "double",
          "description": "Общая цена",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "TradeCards.Data.Entities.CountdownTimerType": {
      "format": "int32",
      "description": "Тип обратного отсчета до очищения корзины",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "TradeCards.Models.Cart.Cart": {
      "description": "Корзина пользователя",
      "type": "object",
      "properties": {
        "Rows": {
          "description": "Элементы корзины",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Cart.CartRow"
          }
        },
        "TotalCount": {
          "format": "int32",
          "description": "Общее количество товаров",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "description": "Общая стоимость",
          "type": "number"
        },
        "CleanupTime": {
          "format": "date-time",
          "description": "Время, по наступлении которого корзина будет очищена",
          "type": "string"
        },
        "CleanupType": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CountdownTimerType"
        }
      }
    },
    "TradeCards.Models.Cart.MoveCartRequest": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogTreeResponse+CatalogLevel": {
      "description": "Данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ActiveCards": {
          "format": "int32",
          "description": "Количество действующих карточек",
          "type": "integer"
        },
        "ArchiveCards": {
          "format": "int32",
          "description": "Количество архивных карточек",
          "type": "integer"
        },
        "Children": {
          "description": "Дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogTreeResponse+CatalogLevel"
          }
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogTreeResponse": {
      "description": "Ответ на запрос структуры каталога",
      "type": "object",
      "properties": {
        "Themes": {
          "description": "Тематики",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogTreeResponse+CatalogLevel"
          }
        }
      }
    },
    "TradeCards.Models.Catalog.CatalogLevelType": {
      "format": "int32",
      "description": "Тип уровня каталога",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "TradeCards.Models.Catalog.GetCatalogLevelResponse+CatalogLevelBase": {
      "description": "Краткие данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogLevelResponse+CatalogThirdLevel": {
      "description": "Данные второго родительского уровня (Тематика)",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "Children": {
          "description": "Дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogLevelResponse+CatalogLevelBase"
          }
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogLevelResponse+CatalogSecondLevel": {
      "description": "Данные первого родительского уровня (Серия или Тематика)",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "Parent": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogLevelResponse+CatalogThirdLevel"
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogLevelResponse": {
      "description": "Ответ на запрос данных уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "LevelType": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.CatalogLevelType"
        },
        "ShortDescription": {
          "description": "Краткое описание",
          "type": "string"
        },
        "ExtendedDescription": {
          "description": "Расширенное описание",
          "type": "string"
        },
        "Image": {
          "description": "Изображение",
          "type": "string"
        },
        "TerminalThemeListImage": {
          "description": "Терминал. Изображение для списка тематик",
          "type": "string"
        },
        "TerminalSeriesListImage": {
          "description": "Терминал. Изображение для списка серий",
          "type": "string"
        },
        "TerminalBackgroundImage": {
          "description": "Терминал. Фон",
          "type": "string"
        },
        "TerminalCollectionsListImage": {
          "description": "Терминал. Изображение для списка коллекций",
          "type": "string"
        },
        "TerminalCardsListImage": {
          "description": "Терминал. Изображение для списка карточек",
          "type": "string"
        },
        "Parent": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogLevelResponse+CatalogSecondLevel"
        }
      }
    },
    "TradeCards.Models.Catalog.MoveCatalogLevelRequest": {
      "description": "Параметры запроса перемещения уровня каталога",
      "type": "object",
      "properties": {
        "ParentId": {
          "description": "Идентификатор родительского уровня",
          "type": "string"
        },
        "Index": {
          "format": "int32",
          "description": "Индекс уровня в списке уровней родителя",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogPublishTreeResponse+CatalogPublishLevel": {
      "description": "Данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ActiveCards": {
          "format": "int32",
          "description": "Количество действующих карточек",
          "type": "integer"
        },
        "ArchiveCards": {
          "format": "int32",
          "description": "Количество архивных карточек",
          "type": "integer"
        },
        "IsPublished": {
          "description": "Признак публикации на сайте",
          "type": "boolean"
        },
        "AllowChangeIsPublished": {
          "description": "Признак возможности изменения флага публикации на сайте",
          "type": "boolean"
        },
        "IsPublishedInCatalogTop": {
          "description": "Признак публикации в топе каталога",
          "type": "boolean"
        },
        "IsPublishedInFirstLevelTop": {
          "description": "Признак публикации в топе первого уровня (тематики)",
          "type": "boolean"
        },
        "IsPublishedInSecondLevelTop": {
          "description": "Признак публикации в топе второго уровня (серии)",
          "type": "boolean"
        },
        "Children": {
          "description": "Дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogPublishTreeResponse+CatalogPublishLevel"
          }
        }
      }
    },
    "TradeCards.Models.Catalog.GetCatalogPublishTreeResponse": {
      "description": "Ответ на запрос структуры каталога c параметрами публикации",
      "type": "object",
      "properties": {
        "Themes": {
          "description": "Тематики",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Catalog.GetCatalogPublishTreeResponse+CatalogPublishLevel"
          }
        }
      }
    },
    "TradeCards.Models.PromoBanner.PromoBannerSiteModel": {
      "type": "object",
      "properties": {
        "Image": {
          "type": "string"
        },
        "ShowSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "Link": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomersTableFilter": {
      "description": "Фильтр таблицы списка покупателей",
      "type": "object",
      "properties": {
        "RegistrationDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "ArchivedDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "Orders": {
          "format": "int32",
          "description": "Количество заказов, оформленных пользователем",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomersTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка покупателей",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "TradeCards.Models.Customer.GetCustomersTableSort": {
      "description": "Параметры сортировки таблицы списка покупателей",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomersTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomersRequest": {
      "description": "Параметры запроса на получение списка покупателей",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных пользователей",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomersTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomersTableSort"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomersCustomerModel": {
      "description": "Данные пользователя для запроса на получение списка покупателей",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "RegistrationDate": {
          "format": "date-time",
          "description": "Дата регистрации",
          "type": "string"
        },
        "ArchivedDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "Orders": {
          "format": "int32",
          "description": "Количество заказов, оформленных пользователем",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomersResponse": {
      "description": "Ответ на запрос на получение списка покупателей",
      "type": "object",
      "properties": {
        "Customers": {
          "description": "Покупатели",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomersCustomerModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomerResponse": {
      "description": "Ответ на запрос получения данных пользователя",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "RegistrationDate": {
          "format": "date-time",
          "description": "Дата регистрации",
          "type": "string"
        },
        "ArchivedDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "Password": {
          "description": "Пароль",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "IsActive": {
          "description": "Признак активности пользователя",
          "type": "boolean"
        },
        "IsEmailConfirmed": {
          "description": "Почта подтверждена",
          "type": "boolean"
        },
        "DeliveryRegion": {
          "type": "string"
        },
        "DeliveryCity": {
          "type": "string"
        },
        "DeliveryPostIndex": {
          "type": "string"
        },
        "DeliveryStreet": {
          "type": "string"
        },
        "DeliveryHouse": {
          "type": "string"
        },
        "DeliveryBuilding": {
          "type": "string"
        },
        "DeliveryApartment": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Account.RegisterCustomerRequest": {
      "description": "Параметры запроса на регистрацию покупателя",
      "required": [
        "Email",
        "FirstName",
        "Password"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "format": "email",
          "description": "Email",
          "type": "string"
        },
        "Password": {
          "format": "password",
          "description": "Пароль",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Customer.EmployeeOrderModel+Row": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TradeCards.Data.Entities.OrderStatus": {
      "format": "int32",
      "description": "Статус заказа",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13
      ],
      "type": "integer"
    },
    "TradeCards.Models.Customer.EmployeeOrderModel": {
      "description": "Информация о заказе для списка заказов в профиле (одна структура для активных и неактивных)",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Customer.EmployeeOrderModel+Row"
          }
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomerActiveOrdersResponse": {
      "type": "object",
      "properties": {
        "Orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Customer.EmployeeOrderModel"
          }
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomerFinishedOrdersRequest": {
      "type": "object",
      "properties": {
        "Year": {
          "format": "int32",
          "type": "integer"
        },
        "Themes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomerFinishedOrdersResponse+Theme": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Customer.GetCustomerFinishedOrdersResponse": {
      "type": "object",
      "properties": {
        "Years": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Themes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Customer.GetCustomerFinishedOrdersResponse+Theme"
          }
        },
        "Orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Customer.EmployeeOrderModel"
          }
        }
      }
    },
    "TradeCards.Models.Message.EmailTemplateTypeEnum": {
      "format": "int32",
      "description": "Типы шаблонов писем",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "type": "integer"
    },
    "TradeCards.Models.Message.GetEmailTemplateResponse": {
      "description": "Ответ на запрос шаблона письма",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Текст сообщения",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Message.UpdateEmailTemplateRequest": {
      "description": "Запрос на изменение шаблона письма",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Текст сообщения",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Employee.GetEmployeesTableFilter": {
      "description": "Фильтр таблицы списка сотрудников",
      "type": "object",
      "properties": {
        "CreationDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "ArchivedDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Employee.GetEmployeesTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка сотрудников",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "TradeCards.Models.Employee.GetEmployeesTableSort": {
      "description": "Параметры сортировки таблицы списка покупателей",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeesTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Employee.GetEmployeesRequest": {
      "description": "Параметры запроса на получение списка сотрудников",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных пользователей",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeesTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeesTableSort"
        }
      }
    },
    "TradeCards.Models.Employee.GetEmployeesEmployeeModel": {
      "description": "Данные пользователя для запроса на получение списка сотрудников",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreationDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchivedDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "IsSystem": {
          "description": "Признак системного пользователя (нельзя отправить в архив)",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Employee.GetEmployeesResponse": {
      "description": "Ответ на запрос получения списка сотрудников",
      "type": "object",
      "properties": {
        "Employees": {
          "description": "Сотрудники",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Employee.GetEmployeesEmployeeModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Employee.EmployeeRoleModel": {
      "type": "object",
      "properties": {
        "Target": {
          "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleTarget"
        },
        "Access": {
          "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleAccess"
        }
      }
    },
    "TradeCards.Models.Employee.GetEmployeeResponse": {
      "description": "Ответ на запрос данных пользователя",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreationDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchivedDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "Password": {
          "description": "Пароль",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "Position": {
          "description": "Должность",
          "type": "string"
        },
        "IsActive": {
          "description": "Признак активности пользователя",
          "type": "boolean"
        },
        "IsSystem": {
          "description": "Признак системного пользователя (нельзя отправить в архив)",
          "type": "boolean"
        },
        "Roles": {
          "description": "Список включенных ролей для пользователя",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleModel"
          }
        }
      }
    },
    "TradeCards.Models.Employee.UpdateEmployeeRequest": {
      "description": "Параметры запроса обновление данных сотрудника",
      "required": [
        "FirstName"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "Password": {
          "description": "Пароль пользователя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "Position": {
          "description": "Должность",
          "type": "string"
        },
        "Roles": {
          "description": "Список включенных ролей для пользователя",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleModel"
          }
        }
      }
    },
    "TradeCards.Models.Account.RegisterEmployeeRequest": {
      "description": "Параметры запроса на регистрацию сотрудника",
      "required": [
        "FirstName"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "Имя",
          "type": "string"
        },
        "LastName": {
          "description": "Фамилия",
          "type": "string"
        },
        "Email": {
          "description": "Почта пользователя",
          "type": "string"
        },
        "Password": {
          "description": "Пароль пользователя",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Номер телефона",
          "type": "string"
        },
        "Position": {
          "description": "Должность",
          "type": "string"
        },
        "Roles": {
          "description": "Список включенных ролей для пользователя",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Employee.EmployeeRoleModel"
          }
        }
      }
    },
    "TradeCards.Models.Geo.SearchResponse": {
      "type": "object",
      "properties": {
        "Longitude": {
          "format": "double",
          "type": "number"
        },
        "Latitude": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TradeCards.Models.Home.GetMenuResponse+CatalogMenuLevel": {
      "description": "Данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "Children": {
          "description": "Дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetMenuResponse+CatalogMenuLevel"
          }
        }
      }
    },
    "TradeCards.Models.Home.TextPageMenuModel": {
      "description": "Ссылка на текстовую страницу",
      "type": "object",
      "properties": {
        "LogicalName": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Home.GetMenuResponse": {
      "description": "Ответ на запрос главного меню для сайта",
      "type": "object",
      "properties": {
        "Themes": {
          "description": "Список тематик",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetMenuResponse+CatalogMenuLevel"
          }
        },
        "Pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.TextPageMenuModel"
          }
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogTopLevelsResponse+CatalogTopLevel": {
      "description": "Данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "LevelType": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.CatalogLevelType"
        },
        "ShortDescription": {
          "description": "Краткое описание",
          "type": "string"
        },
        "Image": {
          "description": "Изображение",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogTopLevelsResponse": {
      "description": "Ответ на запрос топовых уровней каталога",
      "type": "object",
      "properties": {
        "TopLevels": {
          "description": "Топовые уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogTopLevelsResponse+CatalogTopLevel"
          }
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogLevelDetailResponse+CatalogLevelDetailTopLevel": {
      "description": "Данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "LevelType": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.CatalogLevelType"
        },
        "ShortDescription": {
          "description": "Краткое описание",
          "type": "string"
        },
        "Image": {
          "description": "Изображение",
          "type": "string"
        },
        "TopLevels": {
          "description": "Топовые дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogLevelDetailResponse+CatalogLevelDetailTopLevel"
          }
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogLevelDetailResponse+CatalogLevelDetailCard": {
      "description": "Данные карточки",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Index": {
          "format": "int32",
          "description": "Индекс карточки в списке карточек уровня каталога",
          "type": "integer"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Unlimited": {
          "description": "Неограниченный тираж",
          "type": "boolean"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        },
        "Image": {
          "description": "Изображение",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogLevelDetailResponse": {
      "description": "Ответ на запрос подробных данных уровня каталога",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "LevelType": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.CatalogLevelType"
        },
        "ExtendedDescription": {
          "description": "Расширенное описание",
          "type": "string"
        },
        "Image": {
          "description": "Изображение",
          "type": "string"
        },
        "TopLevels": {
          "description": "Топовые дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogLevelDetailResponse+CatalogLevelDetailTopLevel"
          }
        },
        "Cards": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogLevelDetailResponse+CatalogLevelDetailCard"
          }
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogChildrenResponse+CatalogLevel": {
      "description": "Данные уровня каталога",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "LevelType": {
          "$ref": "#/definitions/TradeCards.Models.Catalog.CatalogLevelType"
        },
        "ShortDescription": {
          "description": "Краткое описание",
          "type": "string"
        },
        "Image": {
          "description": "Изображение",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Home.GetCatalogChildrenResponse": {
      "description": "Ответ на запрос списка подуровней",
      "type": "object",
      "properties": {
        "Levels": {
          "description": "Уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.GetCatalogChildrenResponse+CatalogLevel"
          }
        }
      }
    },
    "TradeCards.Models.Card.GetThemeCardsFilter": {
      "description": "Фильтр списка карточек для тематики",
      "type": "object",
      "properties": {
        "ShowSoldOut": {
          "description": "Показывать закончившиеся",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Card.GetThemeCardsColumn": {
      "format": "int32",
      "description": "Колонки списка карточек для тематики",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "TradeCards.Models.Card.GetThemeCardsSort": {
      "description": "Параметры сортировки таблицы списка карточек",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Card.GetThemeCardsColumn"
        }
      }
    },
    "TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.Card.GetThemeCardsFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.Card.GetThemeCardsSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Параметры запроса на получение списка карточек",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Card.GetThemeCardsFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Card.GetThemeCardsSort"
        }
      }
    },
    "TradeCards.Models.Card.SiteThemeCardModel": {
      "description": "Модель получения карточки для сайта",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Unlimited": {
          "description": "Неограниченный тираж",
          "type": "boolean"
        },
        "PrintCountLeft": {
          "format": "int32",
          "description": "Остаток тиража",
          "type": "integer"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        },
        "PreviewImage": {
          "description": "Превью",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Card.SiteThemeCardModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Card.SiteThemeCardModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.LegalEntities.GetLegalEntitiesTableFilter": {
      "description": "Фильтр таблицы списка юр. лиц",
      "type": "object",
      "properties": {
        "CreateDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "ArchiveDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "TerminalsCount": {
          "format": "int32",
          "description": "Количество терминалов",
          "type": "integer"
        },
        "PickupPointsCount": {
          "format": "int32",
          "description": "Количество пунктов самовывоза",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.LegalEntities.GetLegalEntitiesTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка юр.лиц",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "type": "integer"
    },
    "TradeCards.Models.LegalEntities.GetLegalEntitiesTableSort": {
      "description": "Параметры сортировки таблицы юр. лиц",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.LegalEntities.GetLegalEntitiesTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.LegalEntities.GetLegalEntitiesTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.LegalEntities.GetLegalEntitiesTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Параметры запроса на получение списка карточек",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.LegalEntities.GetLegalEntitiesTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.LegalEntities.GetLegalEntitiesTableSort"
        }
      }
    },
    "TradeCards.Models.LegalEntities.GetLegalEntitiesBriefModel": {
      "description": "Строка таблицы списка юр. лиц",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchiveDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "TerminalsCount": {
          "format": "int32",
          "description": "Количество терминалов",
          "type": "integer"
        },
        "PickupPointsCount": {
          "format": "int32",
          "description": "Количество терминалов",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.LegalEntities.GetLegalEntitiesBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.LegalEntities.GetLegalEntitiesBriefModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.LegalEntities.Tabs.Response.LegalEntityBasicInfoResponse": {
      "description": "Базовое описание юр. лица",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "OfficeAddress": {
          "description": "Адрес офиса",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "Email": {
          "description": "Электронная почта",
          "type": "string"
        },
        "Password": {
          "description": "Пароль",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.LegalEntities.Tabs.Request.CreateLegalEntityRequest": {
      "description": "Запрос на создание юридического лица",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "OfficeAddress": {
          "description": "Адрес офиса",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "Email": {
          "description": "Электронная почта",
          "type": "string"
        },
        "Password": {
          "description": "Пароль",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.LegalEntities.Tabs.Request.UpdateLegalEntityBasicInfoRequest": {
      "description": "Запрос на обновление базового описания юр. лица",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "OfficeAddress": {
          "description": "Адрес офиса",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "Email": {
          "description": "Электронная почта",
          "type": "string"
        },
        "Password": {
          "description": "Пароль",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Message.MessageGroupEnum": {
      "format": "int32",
      "description": "Группы редактируемых сообщений",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "type": "integer"
    },
    "TradeCards.Models.Message.GetMessageGroupTreeResponse+MessageSubgroup": {
      "description": "Подгруппа редактируемых текстов",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/TradeCards.Models.Message.MessageGroupEnum"
        },
        "Name": {
          "description": "Наименование группы",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Message.GetMessageGroupTreeResponse+MessageGroup": {
      "description": "Группа редактируемых текстов",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование группы",
          "type": "string"
        },
        "Subgroups": {
          "description": "Сортированный список подгрупп",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Message.GetMessageGroupTreeResponse+MessageSubgroup"
          }
        }
      }
    },
    "TradeCards.Models.Message.GetMessageGroupTreeResponse": {
      "description": "Ответ на запрос получения дерева групп текстов",
      "type": "object",
      "properties": {
        "Groups": {
          "description": "Группы редактируемых текстов",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Message.GetMessageGroupTreeResponse+MessageGroup"
          }
        }
      }
    },
    "TradeCards.Models.Message.MessageTypeEnum": {
      "format": "int32",
      "description": "Типы редактируемых сообщений",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58
      ],
      "type": "integer"
    },
    "TradeCards.Models.Message.GetMessageGroupResponse+Message": {
      "description": "Редактируемое сообщение",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/TradeCards.Models.Message.MessageTypeEnum"
        },
        "Title": {
          "description": "Заголовок сообщения",
          "type": "string"
        },
        "Text": {
          "description": "Текст сообщения",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Message.GetMessageGroupResponse": {
      "description": "Ответ на запрос группы редактируемых сообщений",
      "type": "object",
      "properties": {
        "Messages": {
          "description": "Сортированный список редактируемых сообщений",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Message.GetMessageGroupResponse+Message"
          }
        }
      }
    },
    "TradeCards.Models.Message.UpdateMessageGroupRequest+MessageUpdate": {
      "description": "Отредактированное сообщение",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/TradeCards.Models.Message.MessageTypeEnum"
        },
        "Text": {
          "description": "Текст сообщения",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Message.UpdateMessageGroupRequest": {
      "description": "Запрос на изменение сообщений группы",
      "type": "object",
      "properties": {
        "Messages": {
          "description": "Список отредактированных сообщений",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Message.UpdateMessageGroupRequest+MessageUpdate"
          }
        }
      }
    },
    "TradeCards.Data.Entities.DeliveryType": {
      "format": "int32",
      "description": "Тип доставки заказа",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "TradeCards.Models.Order.PlaceOrderRequest": {
      "description": "Модель создания заказа клиентом",
      "type": "object",
      "properties": {
        "Phone": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "DeliveryType": {
          "$ref": "#/definitions/TradeCards.Data.Entities.DeliveryType"
        },
        "DeliveryRegion": {
          "type": "string"
        },
        "DeliveryCity": {
          "type": "string"
        },
        "DeliveryPostIndex": {
          "type": "string"
        },
        "DeliveryStreet": {
          "type": "string"
        },
        "DeliveryHouse": {
          "type": "string"
        },
        "DeliveryBuilding": {
          "type": "string"
        },
        "DeliveryApartment": {
          "type": "string"
        },
        "DeliveryPickupPointId": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "CreateAccount": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Order.PlaceOrderResponse": {
      "type": "object",
      "properties": {
        "InvoiceId": {
          "type": "string"
        },
        "InvoiceAccessToken": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Order.FilterOrdersFeed": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "TradeCards.Models.Order.GetOrdersTableFilter": {
      "description": "Фильтр таблицы списка заказов",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CreateDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "ItemsCount": {
          "format": "int32",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "Feed": {
          "$ref": "#/definitions/TradeCards.Models.Order.FilterOrdersFeed"
        },
        "DeliveryType": {
          "$ref": "#/definitions/TradeCards.Data.Entities.DeliveryType"
        },
        "PickPointId": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Order.GetOrdersTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка заказов",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "type": "integer"
    },
    "TradeCards.Models.Order.GetOrdersTableSort": {
      "description": "Параметры сортировки таблицы списка карточек",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Order.GetOrdersTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.Order.GetOrdersTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.Order.GetOrdersTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Параметры запроса на получение списка карточек",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Order.GetOrdersTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Order.GetOrdersTableSort"
        }
      }
    },
    "TradeCards.Models.Order.OrderBriefModel": {
      "description": "Краткие сведения о заказе для списка заказов",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "ItemsCount": {
          "format": "int32",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryType": {
          "type": "string"
        },
        "PickpointId": {
          "type": "string"
        },
        "PickpointName": {
          "type": "string"
        },
        "PickpointAddress": {
          "type": "string"
        },
        "IsPrinting": {
          "description": "Печатается ли заказ в настоящий момент",
          "type": "boolean"
        },
        "IsGuest": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Order.OrderBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Order.OrderBriefModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Order.OrderDataModel+OrderRow": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Order.OrderDataModel": {
      "description": "Список позиций заказа для быстрого просмотра из списка заказов",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Order.OrderDataModel+OrderRow"
          }
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TradeCards.Models.Order.StartPrintPreparingModel": {
      "description": "Модель перехода к подготовке к печати заказов (в админке)",
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "TradeCards.Data.Entities.PrintSessionStatus": {
      "format": "int32",
      "description": "Статус сессии печати",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "TradeCards.Models.Order.PickupPointOrderModel": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Phones": {
          "type": "string"
        },
        "Schedule": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "type": "number"
        },
        "ActiveIcon": {
          "type": "string"
        },
        "InactiveIcon": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Order.PickupPointOrderModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Order.PickupPointOrderModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Order.GetOrderDetailsForEmployeeResponse+Row": {
      "type": "object",
      "properties": {
        "PreviewImage": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.ListItem`1[[TradeCards.Data.Entities.OrderStatus, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        }
      }
    },
    "TradeCards.Models.Order.GetOrderDetailsForEmployeeResponse": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Order.GetOrderDetailsForEmployeeResponse+Row"
          }
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "DeliveryType": {
          "$ref": "#/definitions/TradeCards.Data.Entities.DeliveryType"
        },
        "PickPointName": {
          "type": "string"
        },
        "PickPointAddress": {
          "type": "string"
        },
        "PickPointPhones": {
          "type": "string"
        },
        "PickPointSchedule": {
          "type": "string"
        },
        "PickPointComment": {
          "type": "string"
        },
        "DeliveryRegion": {
          "type": "string"
        },
        "DeliveryCity": {
          "type": "string"
        },
        "DeliveryPostIndex": {
          "type": "string"
        },
        "DeliveryStreet": {
          "type": "string"
        },
        "DeliveryHouse": {
          "type": "string"
        },
        "DeliveryBuilding": {
          "type": "string"
        },
        "DeliveryApartment": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "StatusComment": {
          "type": "string"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerLastName": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "CustomerPhone": {
          "type": "string"
        },
        "ShowProcessingBlock": {
          "type": "boolean"
        },
        "IsFinished": {
          "type": "boolean"
        },
        "AvailableStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.ListItem`1[[TradeCards.Data.Entities.OrderStatus, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        }
      }
    },
    "TradeCards.Models.Order.GetPaymentStatusRequest": {
      "type": "object",
      "properties": {
        "InvoiceId": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Order.GetPaymentStatusResponse": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PickupPoint.GetPickupPointsRequest": {
      "description": "Параметры запроса на получение списка ПС",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных ПС",
          "type": "boolean"
        },
        "OwnerId": {
          "description": "Id собственника ПС",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PickupPoint.PickupPointBriefModel": {
      "description": "Модель пункта самовывоза (краткая, для списка пунктов в админке)",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "Address": {
          "description": "Адрес",
          "type": "string"
        },
        "IsAvailable": {
          "description": "Доступность для заказа",
          "type": "boolean"
        },
        "IsOffice": {
          "description": "Является офисом",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.PickupPoint.PickupPointModel": {
      "description": "Модель пункта самовывоза (для админки)",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "Address": {
          "description": "Адрес",
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "description": "Широта",
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "description": "Долгота",
          "type": "number"
        },
        "ManualCoordinates": {
          "description": "Если true, то координаты установлены вручную (не по адресу)",
          "type": "boolean"
        },
        "Phones": {
          "description": "Телефоны",
          "type": "string"
        },
        "Schedule": {
          "description": "Время работы",
          "type": "string"
        },
        "Comment": {
          "description": "Дополнительно",
          "type": "string"
        },
        "IsAvailable": {
          "description": "Доступность для заказа",
          "type": "boolean"
        },
        "IsOffice": {
          "description": "Является офисом",
          "type": "boolean"
        },
        "EmployeeEmail": {
          "description": "Привязанный сотрудник. Email",
          "type": "string"
        },
        "EmployeePassword": {
          "description": "Привязанный сотрудник. Пароль",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PickupPoint.GetPickupPointsOwnersRequest": {
      "description": "Параметры запроса на получение списка собственников ПС",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных собственников ПС",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.PickupPoint.PickupPointsOwnerBriefModel": {
      "description": "Модель собственника пункта самовывоза (краткая, для списка пунктов в админке)",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Index": {
          "format": "int32",
          "type": "integer"
        },
        "ArchiveDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "Name": {
          "description": "Наименование (\"Собственник пунктов\")",
          "type": "string"
        },
        "PickupPointsCount": {
          "format": "int32",
          "description": "Количество пунктов самовывоза",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.PickupPoint.PickupPointsOwnerModel": {
      "description": "Модель собственника пункта самовывоза (полная, для редактирования в админке)",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsActive": {
          "description": "Признак действующий/архивный",
          "type": "boolean"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "Name": {
          "description": "Наименование (\"Собственник пунктов\")",
          "type": "string"
        },
        "MapIconInactive": {
          "description": "Иконка для карты неактивная",
          "type": "string"
        },
        "MapIconActive": {
          "description": "Иконка для карты активная",
          "type": "string"
        },
        "ContactFirstName": {
          "description": "Имя контактного лица",
          "type": "string"
        },
        "ContactLastName": {
          "description": "Фамилия контактного лица",
          "type": "string"
        },
        "ContactPost": {
          "description": "Должность контактного лица",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Email контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Телефон контактного лица",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PPMOrder.FilterOrdersFeed": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "TradeCards.Models.PPMOrder.GetOrdersTableFilter": {
      "description": "Фильтр таблицы списка заказов",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "CustomerPhone": {
          "type": "string"
        },
        "ItemsCount": {
          "format": "int32",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "Feed": {
          "$ref": "#/definitions/TradeCards.Models.PPMOrder.FilterOrdersFeed"
        }
      }
    },
    "TradeCards.Models.PPMOrder.GetOrdersTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка заказов",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "TradeCards.Models.PPMOrder.GetOrdersTableSort": {
      "description": "Параметры сортировки таблицы списка карточек",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.PPMOrder.GetOrdersTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.GetItemsRequest`2[[TradeCards.Models.PPMOrder.GetOrdersTableFilter, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TradeCards.Models.PPMOrder.GetOrdersTableSort, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Параметры запроса на получение списка карточек",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.PPMOrder.GetOrdersTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.PPMOrder.GetOrdersTableSort"
        }
      }
    },
    "TradeCards.Models.PPMOrder.OrderBriefModel": {
      "description": "Краткие сведения о заказе для списка заказов",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "CustomerPhone": {
          "type": "string"
        },
        "ItemsCount": {
          "format": "int32",
          "type": "integer"
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.PPMOrder.OrderBriefModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.PPMOrder.OrderBriefModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.PPMOrder.SetAwaitingDeliveryRequest": {
      "description": "Запрос на перевод одного или нескольких заказов в статус \"Ожидает выдачи\"",
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PPMOrder.GetOrderDetailsResponse+Row": {
      "type": "object",
      "properties": {
        "PreviewImage": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TradeCards.Models.PPMOrder.GetOrderDetailsResponse": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.PPMOrder.GetOrderDetailsResponse+Row"
          }
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.OrderStatus"
        },
        "StatusComment": {
          "type": "string"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerLastName": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "CustomerPhone": {
          "type": "string"
        },
        "ShowProcessingBlock": {
          "type": "boolean"
        },
        "AvailableStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.ListItem`1[[TradeCards.Data.Entities.OrderStatus, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        }
      }
    },
    "TradeCards.Models.PrintAgent.PrintTask": {
      "description": "Задание на печать",
      "type": "object",
      "properties": {
        "Id": {
          "description": "ID задачи",
          "type": "string"
        },
        "PrinterSerialNumber": {
          "description": "Серийный номер принтера, который должен ее напечатать",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PrintAgent.PrinterInfo": {
      "type": "object",
      "properties": {
        "SerialHex": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "type": "integer"
        },
        "LifeTime": {
          "format": "int32",
          "type": "integer"
        },
        "RemainingRibbon": {
          "format": "int32",
          "type": "integer"
        },
        "Sublimate": {
          "format": "int32",
          "type": "integer"
        },
        "Hologram": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Printers.Printer": {
      "description": "Информация о принтере (для админки, раздел \"Настройки -> Принтеры\")",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Id в базе",
          "type": "string"
        },
        "SerialHex": {
          "description": "Серийный номер",
          "type": "string"
        },
        "Name": {
          "description": "Имя принтера",
          "type": "string"
        },
        "Status": {
          "description": "Текущий статус принтера",
          "type": "string"
        },
        "StatusDate": {
          "format": "date-time",
          "description": "Дата статуса принтера",
          "type": "string"
        },
        "InProfileUrl": {
          "description": "Ссылка на скачивание загруженного файла входного цветового профиля",
          "type": "string"
        },
        "OutProfileUrl": {
          "description": "Ссылка на скачивание загруженного файла выходного цветового профиля",
          "type": "string"
        },
        "CanDoTestPrint": {
          "description": "Доступна ли тестовая печать",
          "type": "boolean"
        },
        "LifeTime": {
          "format": "int32",
          "description": "Пробег",
          "type": "integer"
        },
        "RemainingRibbon": {
          "format": "int32",
          "description": "Остаток (карточек?)",
          "type": "integer"
        },
        "Sublimate": {
          "format": "int32",
          "description": "Краска",
          "type": "integer"
        },
        "Hologram": {
          "format": "int32",
          "description": "Голографическая пленка",
          "type": "integer"
        }
      }
    },
    "TradeCards.Data.Entities.TestPrintTaskStatus": {
      "format": "int32",
      "description": "Статус печати тестовой карточки",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "TradeCards.Models.Printers.TestPrintStateModel": {
      "description": "Текущее состояние тестовой печати для конкретного принтера",
      "type": "object",
      "properties": {
        "TaskId": {
          "description": "ID задачи на печать, если таковая существует",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.TestPrintTaskStatus"
        },
        "Error": {
          "description": "Текст ошибки",
          "type": "string"
        },
        "CanStartTestPrint": {
          "description": "Можно ли начать новую задачу",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Printing.PreparationPrinter": {
      "description": "Информация о принтере (для админки, раздел \"Заказы - подготовка к печати\")",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "IsReady": {
          "type": "boolean"
        },
        "LifeTime": {
          "format": "int32",
          "type": "integer"
        },
        "RemainingRibbon": {
          "format": "int32",
          "type": "integer"
        },
        "Sublimate": {
          "format": "int32",
          "type": "integer"
        },
        "Hologram": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TradeCards.Data.Entities.PrintSessionCardStatus": {
      "format": "int32",
      "description": "Статус печати карточки",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "TradeCards.Models.Printing.PrintPreparationModel+Card": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Printer": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.PrintSessionCardStatus"
        },
        "StatusText": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Printing.PrintPreparationModel+Order": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Printer": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.PrintPreparationModel+Card"
          }
        }
      }
    },
    "TradeCards.Models.Printing.PrintPreparationModel": {
      "type": "object",
      "properties": {
        "Printers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.PreparationPrinter"
          }
        },
        "Orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.PrintPreparationModel+Order"
          }
        }
      }
    },
    "TradeCards.Models.Printing.SelectPrintersRequest": {
      "description": "Запрос на редактирование списка выбранных принтеров",
      "type": "object",
      "properties": {
        "Printers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.Printing.PrintingPrinter": {
      "description": "Информация о принтере (для админки, раздел \"Заказы - процесс печати\")",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "IsReady": {
          "type": "boolean"
        },
        "LifeTime": {
          "format": "int32",
          "type": "integer"
        },
        "RemainingRibbon": {
          "format": "int32",
          "type": "integer"
        },
        "Sublimate": {
          "format": "int32",
          "type": "integer"
        },
        "Hologram": {
          "format": "int32",
          "type": "integer"
        },
        "ReadyCards": {
          "format": "int32",
          "type": "integer"
        },
        "TotalCards": {
          "format": "int32",
          "type": "integer"
        },
        "CanStop": {
          "type": "boolean"
        },
        "IsSelected": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Printing.PrintProcessModel+Card": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "PrinterName": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/TradeCards.Data.Entities.PrintSessionCardStatus"
        },
        "StatusText": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Printing.PrintProcessModel+Order": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "PrinterName": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.PrintProcessModel+Card"
          }
        }
      }
    },
    "TradeCards.Models.Printing.PrintProcessModel": {
      "type": "object",
      "properties": {
        "Printers": {
          "description": "Информация о состоянии принтеров",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.PrintingPrinter"
          }
        },
        "Orders": {
          "description": "Информация о печатающихся заказах",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.PrintProcessModel+Order"
          }
        },
        "CanStopAll": {
          "description": "Можно ли остановить все принтеры (т.е. есть ли хотя бы у одного принтера не начатые задания на печать)",
          "type": "boolean"
        },
        "CanFinish": {
          "description": "Можно ли завершить сессию печати. Все карточки должны быть напечатаны",
          "type": "boolean"
        },
        "ForceShutdownRequested": {
          "description": "Запрошено экстренное завершение сессии",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Printing.StartPrintingRequest+Card": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Printer": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Printing.StartPrintingRequest+Order": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Printer": {
          "type": "string"
        },
        "Cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.StartPrintingRequest+Card"
          }
        }
      }
    },
    "TradeCards.Models.Printing.StartPrintingRequest": {
      "description": "Запрос на запуск печати",
      "type": "object",
      "properties": {
        "Orders": {
          "description": "Список заказов для печати",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Printing.StartPrintingRequest+Order"
          }
        },
        "Printers": {
          "description": "Выбранные принтеры для печати",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.Printing.ChangeCardStatusRequest": {
      "description": "Запрос на изменение статуса печати карточки",
      "type": "object",
      "properties": {
        "Comment": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Printing.ReprintCardRequest": {
      "description": "Запрос на повторную печать карточки",
      "type": "object",
      "properties": {
        "PrinterId": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Printing.ForceShutdownResponse": {
      "description": "Результат команды на экстренное завершение",
      "type": "object",
      "properties": {
        "IsImmediate": {
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Profile.GetProfileDataResponse": {
      "description": "Ответ на запрос данных профиля покупателя",
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "DeliveryRegion": {
          "type": "string"
        },
        "DeliveryCity": {
          "type": "string"
        },
        "DeliveryPostIndex": {
          "type": "string"
        },
        "DeliveryStreet": {
          "type": "string"
        },
        "DeliveryHouse": {
          "type": "string"
        },
        "DeliveryBuilding": {
          "type": "string"
        },
        "DeliveryApartment": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Profile.ProfileOrderModel+Row": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TradeCards.Models.Profile.ProfileOrderModel": {
      "description": "Информация о заказе для списка заказов в профиле (одна структура для активных и неактивных)",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Profile.ProfileOrderModel+Row"
          }
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "type": "string"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Profile.GetActiveOrdersResponse": {
      "type": "object",
      "properties": {
        "Orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Profile.ProfileOrderModel"
          }
        }
      }
    },
    "TradeCards.Models.Profile.GetOrderDetailsResponse+Row": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "PreviewImage": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TradeCards.Models.Profile.GetOrderDetailsResponse": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Profile.GetOrderDetailsResponse+Row"
          }
        },
        "TotalPrice": {
          "format": "double",
          "type": "number"
        },
        "DeliveryType": {
          "$ref": "#/definitions/TradeCards.Data.Entities.DeliveryType"
        },
        "Address": {
          "description": "адрес для доставки транспортной компанией, либо адрес пункта самовывоза, либо адрес терминала",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "description": "расписание (заполняется только для пункта самовывоза)",
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "StatusDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Profile.GetProfileFinishedOrdersRequest": {
      "type": "object",
      "properties": {
        "Year": {
          "format": "int32",
          "type": "integer"
        },
        "Themes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.Profile.GetFinishedOrdersResponse+Theme": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Profile.GetFinishedOrdersResponse": {
      "type": "object",
      "properties": {
        "Years": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Themes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Profile.GetFinishedOrdersResponse+Theme"
          }
        },
        "Orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Profile.ProfileOrderModel"
          }
        }
      }
    },
    "TradeCards.Models.PromoBanner.PromoBannerModel": {
      "description": "Админка. Модель для списка промо баннеров",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Show": {
          "description": "Показывать на сайте",
          "type": "boolean"
        },
        "ShowFrom": {
          "format": "date-time",
          "description": "Дата публикации. От",
          "type": "string"
        },
        "ShowTo": {
          "format": "date-time",
          "description": "Дата публикации. До",
          "type": "string"
        },
        "ShowSeconds": {
          "format": "int32",
          "description": "Длительность показа (сек)",
          "type": "integer"
        },
        "Link": {
          "description": "Ссылка",
          "type": "string"
        },
        "Image": {
          "description": "Ссылка на изображение баннера",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.PromoBanner.PromoBannerUpdateModel": {
      "description": "Админка. Модель для сохранения инфы о промо баннере",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Show": {
          "description": "Показывать на сайте",
          "type": "boolean"
        },
        "ShowFrom": {
          "format": "date-time",
          "description": "Дата публикации. От",
          "type": "string"
        },
        "ShowTo": {
          "format": "date-time",
          "description": "Дата публикации. До",
          "type": "string"
        },
        "ShowSeconds": {
          "format": "int32",
          "description": "Длительность показа (сек)",
          "type": "integer"
        },
        "Link": {
          "description": "Ссылка",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Settings.ParamResponse": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Settings.ServiceSettingsResponse": {
      "type": "object",
      "properties": {
        "OrdersNotifyEmail": {
          "type": "string"
        },
        "PickpointOfficeAddress": {
          "type": "string"
        },
        "PickpointOfficeAddressComment": {
          "type": "string"
        },
        "ProportionalPriceFactor": {
          "format": "double",
          "type": "number"
        },
        "ExponentialPriceFactor": {
          "format": "double",
          "type": "number"
        },
        "CartClearInterval": {
          "format": "int32",
          "type": "integer"
        },
        "OrderPaymentInterval": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Settings.TestPrintSettingsResponse": {
      "type": "object",
      "properties": {
        "PrintFrontImage": {
          "description": "Исходник для печати на терминале. Лицевая сторона. Изображение",
          "type": "string"
        },
        "PrintFrontHolo": {
          "description": "Исходник для печати на терминале. Лицевая сторона. Голограмма",
          "type": "string"
        },
        "PrintFrontLamination": {
          "description": "Исходник для печати на терминале. Лицевая сторона. Ламинация",
          "type": "string"
        },
        "PrintBackImage": {
          "description": "Исходник для печати на терминале. Обратная сторона. Изображение",
          "type": "string"
        },
        "PrintBackHolo": {
          "description": "Исходник для печати на терминале. Обратная сторона. Голограмма",
          "type": "string"
        },
        "PrintBackLamination": {
          "description": "Исходник для печати на терминале. Обратная сторона. Ламинация",
          "type": "string"
        },
        "PrintFilesMode": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardPrintFilesMode"
        }
      }
    },
    "TradeCards.Models.Settings.SocialSettingsResponse": {
      "type": "object",
      "properties": {
        "VkAppId": {
          "type": "string"
        },
        "FbAppId": {
          "type": "string"
        },
        "GoogleAppId": {
          "type": "string"
        },
        "OkAppId": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.SiteSearch.SearchRequest": {
      "type": "object",
      "properties": {
        "SearchString": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.SiteSearch.Card": {
      "description": "Данные карточки для страницы результатов поиска",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Unlimited": {
          "description": "Неограниченный тираж",
          "type": "boolean"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        },
        "PreviewImage": {
          "description": "Изображение",
          "type": "string"
        },
        "Path": {
          "description": "Путь к карточке",
          "type": "string"
        },
        "PrintCountLeft": {
          "format": "int32",
          "description": "Остаток тиража",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.SiteSearch.CatalogLevel": {
      "description": "Данные уровня каталога для страницы результатов поиска",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ShortDescription": {
          "type": "string"
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.CatalogLevel"
          }
        }
      }
    },
    "TradeCards.Models.SiteSearch.SeriesGroup": {
      "description": "Группа каталогов для страницы результатов поиска",
      "type": "object",
      "properties": {
        "Path": {
          "type": "string"
        },
        "Series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.CatalogLevel"
          }
        }
      }
    },
    "TradeCards.Models.SiteSearch.Set": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ShortDescription": {
          "type": "string"
        },
        "CardsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.SiteSearch.SetGroup": {
      "description": "Группа комплектов для страницы результатов поиска",
      "type": "object",
      "properties": {
        "Path": {
          "type": "string"
        },
        "Sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.Set"
          }
        }
      }
    },
    "TradeCards.Models.SiteSearch.OtherResultType": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "TradeCards.Models.SiteSearch.OtherResult": {
      "type": "object",
      "properties": {
        "LogicalName": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/TradeCards.Models.SiteSearch.OtherResultType"
        }
      }
    },
    "TradeCards.Models.SiteSearch.SearchResult": {
      "type": "object",
      "properties": {
        "Cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.Card"
          }
        },
        "Themes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.CatalogLevel"
          }
        },
        "Series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.SeriesGroup"
          }
        },
        "Sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.SetGroup"
          }
        },
        "OtherResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.SiteSearch.OtherResult"
          }
        }
      }
    },
    "TradeCards.Models.SiteSearch.SuggestsResult": {
      "type": "object",
      "properties": {
        "Suggests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsTableFilter": {
      "description": "Фильтр таблицы списка терминалов",
      "type": "object",
      "properties": {
        "CreateDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "ArchiveDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "InventoryNumber": {
          "description": "Инвентарный номер",
          "type": "string"
        },
        "ConnectId": {
          "description": "",
          "type": "string"
        },
        "TerminalOwner": {
          "description": "Идентификатор собственника терминала",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка терминалов",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "TradeCards.Models.Terminal.GetTerminalsTableSort": {
      "description": "Параметры сортировки таблицы списка терминалов",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsRequest": {
      "description": "Параметры запроса на получение списка терминалов",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных терминалов",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsTableSort"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsRow": {
      "description": "Строка таблицы списка терминалов",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchiveDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "InventoryNumber": {
          "description": "Инвентарный номер",
          "type": "string"
        },
        "ConnectId": {
          "description": "",
          "type": "string"
        },
        "TerminalOwner": {
          "description": "Собственник терминала",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsResponse": {
      "description": "Ответ на запрос списка терминалов",
      "type": "object",
      "properties": {
        "Terminals": {
          "description": "Терминалы",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalsRow"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс страницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество страниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsForAttachRequest": {
      "description": "Параметры запроса на получение списка терминалов для прикрепления",
      "type": "object",
      "properties": {
        "ConnectId": {
          "description": "Строка для поиска",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalsForAttachRow": {
      "description": "Строка таблицы списка терминалов для присоединения",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "ConnectId": {
          "description": "",
          "type": "string"
        },
        "TerminalOwner": {
          "description": "Собственник терминала",
          "type": "string"
        },
        "TerminalOwnerId": {
          "description": "Идентификатор собственника терминала",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalResponseCatalogLevelCustomImagesRow": {
      "type": "object",
      "properties": {
        "CatalogLevelId": {
          "description": "Идентификатор уровня каталога",
          "type": "string"
        },
        "BackgroundImage": {
          "description": "Фон",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.GetTerminalResponse": {
      "description": "Ответ на запрос данных терминала",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchiveDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "InventoryNumber": {
          "description": "Инвентарный номер",
          "type": "string"
        },
        "ConnectId": {
          "description": "",
          "type": "string"
        },
        "TerminalOwner": {
          "description": "Собственник терминала",
          "type": "string"
        },
        "IsActive": {
          "description": "Признак активности",
          "type": "boolean"
        },
        "TerminalOwnerId": {
          "description": "Идентификатор собственника терминала",
          "type": "string"
        },
        "Location": {
          "description": "Адрес расположения",
          "type": "string"
        },
        "CartCleanupWarningDelay": {
          "format": "int32",
          "description": "Предупреждение об очистке корзины при бездействии более N сек.",
          "type": "integer"
        },
        "CartCleanupCountdown": {
          "format": "int32",
          "description": "Обратный отсчет до очистки корзины, сек.",
          "type": "integer"
        },
        "PublishCatalogLevels": {
          "description": "Список идентификаторов всех уровней каталога, предназначенных к публикации на данном терминале",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomCatalogLevelImages": {
          "description": "Список всех переопределенных фоновых изображений для данного терминала",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Terminal.GetTerminalResponseCatalogLevelCustomImagesRow"
          }
        },
        "PromoVideo": {
          "description": "Промо-ролик",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.GetCardsRequest": {
      "description": "Модель запроса часто меняющихся параметров карточек для терминала",
      "type": "object",
      "properties": {
        "CardIds": {
          "description": "Идентификаторы",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.Terminal.GetCardVariableParamsModel": {
      "description": "Модель получения часто меняющихся параметров карточки",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "AvailablePrintCount": {
          "format": "int32",
          "description": "Остаток тиража",
          "type": "integer"
        },
        "Price": {
          "format": "double",
          "description": "Цена",
          "type": "number"
        }
      }
    },
    "TradeCards.Models.GetItemsResponse`1[[TradeCards.Models.Terminal.GetCardVariableParamsModel, TradeCards, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      "description": "Ответ на запрос получения списка элементов",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Карточки",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Terminal.GetCardVariableParamsModel"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество старниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.Terminal.TerminalFull+FileInfo": {
      "description": "Сведения о файле",
      "type": "object",
      "properties": {
        "Url": {
          "description": "Адрес",
          "type": "string"
        },
        "MD5": {
          "description": "Хэш",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.Terminal.TerminalFull+Card": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "Index": {
          "format": "int32",
          "description": "Индекс карточки в списке карточек уровня каталога",
          "type": "integer"
        },
        "PrintCount": {
          "format": "int32",
          "description": "Тираж",
          "type": "integer"
        },
        "Title": {
          "description": "Наименование",
          "type": "string"
        },
        "Description": {
          "description": "Описание для сайта",
          "type": "string"
        },
        "PreviewImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "FrontImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "BackImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "TerminalPrintFrontImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "TerminalPrintFrontHolo": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "TerminalPrintFrontLamination": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "TerminalPrintBackImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "TerminalPrintBackHolo": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "TerminalPrintBackLamination": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "PrintFilesMode": {
          "$ref": "#/definitions/TradeCards.Data.Entities.CardPrintFilesMode"
        }
      }
    },
    "TradeCards.Models.Terminal.TerminalFull+CatalogLevel": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор уровня каталога",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ShortDescription": {
          "description": "Краткое описание",
          "type": "string"
        },
        "ExtendedDescription": {
          "description": "Расширенное описание",
          "type": "string"
        },
        "IsPublishedInCatalogTop": {
          "description": "Признак публикации в топе каталога",
          "type": "boolean"
        },
        "IsPublishedInFirstLevelTop": {
          "description": "Признак публикации в топе первого уровня",
          "type": "boolean"
        },
        "IsPublishedInSecondLevelTop": {
          "description": "Признак публикации в топе второго уровня",
          "type": "boolean"
        },
        "Index": {
          "format": "int32",
          "description": "Индекс уровня в списке уровней родителя",
          "type": "integer"
        },
        "CatalogItemPreviewImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "CatalogItemBackgroundImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "CardsHeaderImage": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "Children": {
          "description": "Дочерние уровни",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+CatalogLevel"
          }
        },
        "Cards": {
          "description": "Список всех карточек, предназначенных к публикации на данном терминале",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+Card"
          }
        }
      }
    },
    "TradeCards.Models.Terminal.TerminalFull": {
      "description": "Полные сведения о терминале (нужны самому терминалу при регулярном обновлении данных)",
      "type": "object",
      "properties": {
        "InventoryNumber": {
          "description": "Инвентарный номер",
          "type": "string"
        },
        "Location": {
          "description": "Адрес расположения",
          "type": "string"
        },
        "CartCleanupCountdownMessage": {
          "description": "Сообщение о том, что корзина скоро будет очищена",
          "type": "string"
        },
        "CartCleanupWarningDelay": {
          "format": "int32",
          "description": "Предупреждение об очистке корзины при бездействии более N сек.",
          "type": "integer"
        },
        "CartCleanupCountdown": {
          "format": "int32",
          "description": "Обратный отсчет до очистки корзины, сек.",
          "type": "integer"
        },
        "PromoVideo": {
          "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+FileInfo"
        },
        "CatalogLevels": {
          "description": "Список всех уровней каталога, предназначенных к публикации на данном терминале",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Terminal.TerminalFull+CatalogLevel"
          }
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnersTableFilter": {
      "description": "Фильтр таблицы списка терминалов",
      "type": "object",
      "properties": {
        "CreateDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "ArchiveDate": {
          "$ref": "#/definitions/TradeCards.Models.DateFilter"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "TerminalsCount": {
          "format": "int32",
          "description": "Количество терминалов",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnersTableColumn": {
      "format": "int32",
      "description": "Колонки таблицы списка терминалов",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnersTableSort": {
      "description": "Параметры сортировки таблицы списка терминалов",
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnersTableColumn"
        },
        "Descending": {
          "description": "Признак сортировки в обратном порядке",
          "type": "boolean"
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnersRequest": {
      "description": "Параметры запроса на получение списка терминалов",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Признак запроса активных терминалов",
          "type": "boolean"
        },
        "PageSize": {
          "format": "int32",
          "description": "Размер старницы",
          "default": 10,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс старницы",
          "default": 0,
          "type": "integer"
        },
        "Filter": {
          "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnersTableFilter"
        },
        "SortOrder": {
          "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnersTableSort"
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnersRow": {
      "description": "Строка таблицы списка терминалов",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchiveDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "TerminalsCount": {
          "format": "int32",
          "description": "Количество терминалов",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnersResponse": {
      "description": "Ответ на запрос списка терминалов",
      "type": "object",
      "properties": {
        "TerminalOwners": {
          "description": "Терминалы",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnersRow"
          }
        },
        "PageIndex": {
          "format": "int32",
          "description": "Индекс страницы",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "description": "Количество страниц",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "description": "Полное количество записей",
          "type": "integer"
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnerTerminalsRow": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "ConnectId": {
          "description": "",
          "type": "string"
        }
      }
    },
    "TradeCards.Models.TerminalOwner.GetTerminalOwnerResponse": {
      "description": "Ответ на запрос данных терминала",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Идентификатор",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Дата создания",
          "type": "string"
        },
        "ArchiveDate": {
          "format": "date-time",
          "description": "Дата архивирования",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "IsActive": {
          "description": "Признак активности",
          "type": "boolean"
        },
        "Email": {
          "description": "Email для входа",
          "type": "string"
        },
        "Password": {
          "description": "Пароль для входа",
          "type": "string"
        },
        "OfficeAddress": {
          "description": "Адрес офиса",
          "type": "string"
        },
        "Terminals": {
          "description": "Терминалы",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.TerminalOwner.GetTerminalOwnerTerminalsRow"
          }
        }
      }
    },
    "TradeCards.Models.TerminalOwner.UpdateTerminalOwnerRequest": {
      "description": "Запрос на обновление данных терминала",
      "type": "object",
      "properties": {
        "Email": {
          "description": "Email для входа",
          "type": "string"
        },
        "Password": {
          "description": "Пароль для входа",
          "type": "string"
        },
        "Name": {
          "description": "Наименование",
          "type": "string"
        },
        "OfficeAddress": {
          "description": "Адрес офиса",
          "type": "string"
        },
        "ContactPersonName": {
          "description": "ФИО контактного лица",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Контактный телефон",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Контактный Email",
          "type": "string"
        },
        "Terminals": {
          "description": "Терминалы, привязанные к собственнику",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TradeCards.Models.TextPage.TextPageBriefModel": {
      "description": "Админка. Модель для списка текстовых страниц",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsPublished": {
          "type": "boolean"
        },
        "IsSystem": {
          "type": "boolean"
        },
        "Index": {
          "format": "int32",
          "type": "integer"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.TextPage.TextPageModel": {
      "description": "Админка. Модель для списка текстовых страниц",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsPublished": {
          "type": "boolean"
        },
        "IsSystem": {
          "type": "boolean"
        },
        "LogicalName": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "TitleTag": {
          "type": "string"
        },
        "DescriptionTag": {
          "type": "string"
        },
        "KeywordsTag": {
          "type": "string"
        }
      }
    },
    "TradeCards.Models.TextPage.TextPageViewModel": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "TitleTag": {
          "type": "string"
        },
        "DescriptionTag": {
          "type": "string"
        },
        "KeywordsTag": {
          "type": "string"
        },
        "SidePages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeCards.Models.Home.TextPageMenuModel"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    { }
  ]
}